;
function{id, name}
	PK(id);
role {id, name}
	PK(id);
function_assignment{function_id, role_id}
	PK(function_id, role_id),
	FK(function_id) REFERENCES function(id),
	FK(role_id) REFERENCES role(id);
cost{id, name, cost}    
    PK(id);
user{id, name, password, cost, role_id}
	PK(id),
    FK(cost) REFERENCES cost(id),
	FK(role_id) REFERENCES role(id);
work_state{id, name}    
    PK(id);
test_state{id, name}
    PK(id);
stakeholder{id, name}
    PK(id);
phase{id, name}
    PK(id);
task_type{id, phase_id, name}
    PK(id),
    FK(phase_id) REFERENCES phase(id);
project{id, name, create_date, est_date, description, state}
    PK(id),
    FK(state) REFERENCES work_state(id);
story{id, project_id, user_id, stakeholder, name, create_date, est_date, description, purpose, comment, ap, state}
    PK(id),
    FK(project_id) REFERENCES project(id),
    FK(stakeholder) REFERENCES stakeholder(id),
    FK(user_id) REFERENCES user(id),
    FK(state) REFERENCES work_state(id);
task{id, story_id, user_id, stakeholder, name, create_date, est_hour, real_hour, est_date, real_date, description, purpose, comment, state, type, value}
    PK(id)
    FK(story_id) REFERENCES story(id),
    FK(stakeholder) REFERENCES stakeholder(id),
    FK(type) REFERENCES task_type(id),
    FK(user_id) REFERENCES user(id),
    FK(state) REFERENCES work_state(id);
test{id, story_id, user_id, name, create_date, description, expect, comment, state}    
	PK(id),
    FK(story_id) REFERENCES story(id),
    FK(user_id) REFERENCES user(id),
    FK(state) REFERENCES test_state(id);
project_assignment{project_id, user_id, hour}
    PK(project_id, user_id),
    FK(project_id) REFERENCES project(id),
    FK(user_id) REFERENCES user(id); 
    